apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'


android {
    compileSdkVersion Config.compileSdkVersion

    defaultConfig {
        minSdkVersion Config.minSdkVersion
        targetSdkVersion Config.targetSdkVersion
        versionCode Config.versionCode
        versionName Config.versionName
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled = true
        dataBinding.enabled = true
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dexOptions {
        preDexLibraries = false
        dexInProcess = false
        javaMaxHeapSize "4g"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
    }

}

kapt {
    correctErrorTypes = true
}

configurations.all {
    resolutionStrategy {
        force "org.jetbrains.kotlin:kotlin-stdlib:$Versions.kotlinVersion"
    }
}

dependencies {
    implementation project(':presentation')
    implementation project(':data')
    implementation project(':domain')
    implementation project(':cache')
    implementation project(':remote')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha4'
    implementation "com.google.android.material:material:1.1.0-alpha10"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'


    implementation 'com.jakewharton.rxbinding3:rxbinding-core:3.0.0'
    implementation 'com.jakewharton.rxbinding3:rxbinding-appcompat:3.0.0'
    implementation 'com.jakewharton.rxbinding3:rxbinding-drawerlayout:3.0.0'
    implementation 'com.jakewharton.rxbinding3:rxbinding-leanback:3.0.0'
    implementation 'com.jakewharton.rxbinding3:rxbinding-recyclerview:3.0.0'
    implementation 'com.jakewharton.rxbinding3:rxbinding-swiperefreshlayout:3.0.0'
    implementation 'com.jakewharton.rxbinding3:rxbinding-viewpager:3.0.0'
    implementation 'com.jakewharton.rxbinding3:rxbinding-material:3.0.0'

    implementation Libraries.javaxAnnotation
    implementation Libraries.navFragment
    implementation Libraries.navKtx

    implementation Libraries.kotlin
    implementation Libraries.javaxInject
    implementation Libraries.rxKotlin

    implementation Libraries.timber
    implementation Libraries.rxandroid
    implementation Libraries.glide
    implementation Libraries.dagger
    implementation Libraries.daggerSupport

    implementation Libraries.lifecyleRuntime
    implementation Libraries.roomRunTime
    implementation Libraries.lifecycleExtensions
    implementation Libraries.lifecycleRxStreams
    kapt Libraries.lifecycleCompiler

    // Add the Firebase SDK for Google Analytics
    implementation Libraries.firebaseAnalytics

    // Add the SDKs for any other Firebase products you want to use in your app
    // For example, to use Firebase Authentication and Cloud Firestore
    implementation Libraries.firebaseAuth
    implementation Libraries.firebaseFireStore

//    testImplementation mobileUiTestDependencies.kotlinJUnit

    kapt Libraries.daggerCompiler
    kapt Libraries.daggerProcessor
    compileOnly Libraries.glassfishAnnotation

    // Instrumentation test dependencies
    androidTestImplementation TestLibraries.jUnit
    androidTestImplementation TestLibraries.mockitoKotlin
//    androidTestImplementation mobileUiTestDependencies.mockitoAndroid
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    // Core library
    androidTestImplementation 'androidx.test:core:1.2.0'

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'

    // Assertions
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.ext:truth:1.2.0'
    androidTestImplementation 'com.google.truth:truth:0.42'

    // Espresso dependencies
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-accessibility:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-web:3.2.0'
    androidTestImplementation 'androidx.test.espresso.idling:idling-concurrent:3.2.0'

    // The following Espresso dependency can be either "implementation"
    // or "androidTestImplementation", depending on whether you want the
    // dependency to appear on your APK's compile classpath or the test APK
    // classpath.
    androidTestImplementation 'androidx.test.espresso:espresso-idling-resource:3.2.0'

    kaptTest Libraries.daggerCompiler
    kaptAndroidTest Libraries.daggerCompiler

}
